@model eQuiz.Web.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

@helper LoginBtnStyle(string AuthenticationType)
{
    var btnClass = "";
    switch (@AuthenticationType.ToUpper())
    {
        case "GOOGLE":
        {
            btnClass = "google-btn";
            break;
        }
        case "FACEBOOK":
        {
            btnClass = "facebook-btn";
            break;
        }
        case "LINKEDIN":
        {
            btnClass = "linkedin-btn";
            break;
        }
    }

    @btnClass.ToString()
}

@*<h4>Use another service to log in.</h4>
    <hr />*@
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList" class="custom-container-fluid center">
                @foreach (AuthenticationDescription p in loginProviders)
                {
                    <button type="submit" class="btn @LoginBtnStyle(@p.AuthenticationType) btn-lg center-block col-md-3" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                }
            </div>
        }
    }
}
